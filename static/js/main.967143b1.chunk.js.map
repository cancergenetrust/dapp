{"version":3,"sources":["components/Markdown.js","components/Steward.js","components/Stewards.js","components/Submission.js","getWeb3.js","App.js","index.js"],"names":["Markdown","state","markdown","this","_loadMarkdown","props","match","params","name","nextProps","setState","_this2","console","log","concat","fetch","then","response","text","catch","error","react_default","a","createElement","className","react_markdown_default","source","Component","Steward","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","index","patients","JSON","ipfs","files","cat","hash","parse","i","submissions","length","submission","push","domain","href","address","target","rel","keys","sort","map","key","slice","react_router_dom","to","filter","f","test","react_loader_default","Stewards","stewards","contract","size","numStewards","toNumber","addresses","ipfsHashes","ipfsHash","steward","components_Steward","Submission","cgt_public_id","days_from_birth","style","overflowY","file","multihash","ipfsURL","endsWith","encodeURIComponent","getWeb3","Promise","resolve","reject","window","addEventListener","asyncToGenerator","regenerator_default","mark","_callee","web3","_web","provider","_web2","wrap","_context","prev","next","ethereum","Web3","enable","t0","providers","HttpProvider","stop","stewardsContract","require","truffleContract","StewardsContract","App","loaded","eth","accounts","setProvider","currentProvider","deployed","IpfsApi","host","port","protocol","t6","alert","basename","process","src","height","alt","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","react_router","exact","path","render","components_Stewards","assign","components_Submission","component","ReactDOM","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.967143b1.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport ReactMarkdown from 'react-markdown'\n\nexport default class Markdown extends Component {\n\n  state = {\n    markdown: '',\n  }\n\n  componentDidMount() {\n    this._loadMarkdown(this.props.match.params.name)\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (this.props.match.params.name !== nextProps.match.params.name) {\n      this.setState({ markdown: '' })\n      this._loadMarkdown(nextProps.match.params.name)\n    }\n  }\n\n  _loadMarkdown(name) {\n    console.log(`Loading /docs/${name}.md`)\n    fetch(`/docs/${name}.md`)\n      .then(response => response.text())\n      .then(markdown => this.setState({ markdown }))\n      .catch(error => console.log(error))\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <ReactMarkdown source={this.state.markdown} />\n      </div>\n    )\n  }\n}\n","import React, {Component} from 'react'\nimport Loader from 'react-loader'\nimport { Link } from 'react-router-dom'\n\nclass Steward extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      index: null,\n      patients: {}, // submissions by patient public id\n    }\n  }\n\n  async componentWillMount() {\n    this.setState({index: JSON.parse(await this.props.ipfs.files.cat(this.props.hash))})\n\n    var patients = {}\n    for (var i = 0; i < this.state.index.submissions.length; i++) {\n      const response = await this.props.ipfs.files.cat(this.state.index.submissions[i])\n      const submission = {...await JSON.parse(response), hash: this.state.index.submissions[i]}\n\n      // Update submissions by patients dictionary\n      if (!(submission[\"cgt_public_id\"] in patients)) patients[submission[\"cgt_public_id\"]] = []\n      patients[submission[\"cgt_public_id\"]].push(submission)\n      this.setState({patients: patients})\n    }\n  }\n\n  render() {\n    if (!this.state.index) return (<Loader />)\n\n    return (\n      <div className=\"card\">\n        <div className=\"card-header\">\n          <h3>{this.state.index.domain}</h3>\n          <h6>Ethereum Address:&nbsp;\n            <a href={`https://rinkeby.etherscan.io/address/${this.props.address}`}\n              target=\"_blank\" rel=\"noopener noreferrer\">{this.props.address}</a>\n          </h6>\n          <h6>IPFS Hash:&nbsp;\n            <a href={`https://ipfs.infura.io/ipfs/${this.props.hash}`}\n              target=\"_blank\" rel=\"noopener noreferrer\">{this.props.hash}</a>\n          </h6>\n        </div>\n        <ul className=\"list-group list-group-flush\">\n          <div className=\"card-body\">\n          {Object.keys(this.state.patients).sort().map(key =>\n            <li key={key} className=\"list-group-item d-flex justify-content-between align-items-center\">\n              Patient {key.slice(0,8)}\n              <div>\n              {this.state.patients[key].map(submission =>\n                  <Link key={submission.hash} to={`/submissions/${submission.hash}`}>\n                    <span className=\"badge badge-primary badge-pill float-right ml-2\">\n                        {submission.files.filter(f => \n                          /seer|omop/.test(f.name)).length ? \" Clinical\" : \"\"}\n                        {submission.files.filter(f => \n                          /\\.dcm|\\.jpg|\\.png/.test(f.name)).length ? \" Imaging\" : \"\"}\n                        {submission.files.filter(f => \n                          /\\.vcf|foundation/.test(f.name)).length ? \" Genomic\" : \"\"}\n                        &nbsp;({submission.files.length})\n                    </span>\n                  </Link>\n              )}\n              </div>\n            </li>\n          )}\n          </div>\n        </ul>\n      </div>\n    )\n  }\n}\n\nexport default Steward\n","import React, {Component} from 'react'\n\nimport Steward from './Steward'\n\nclass Stewards extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      stewards: [],\n    }\n  }\n\n  async componentWillMount() {\n    const numStewards = await this.props.contract.size.call()\n    console.log(`Found ${numStewards.toNumber()} stewards`)\n    const stewards = []\n    for(var i=0; i < numStewards.toNumber(); i++) {\n      const address = await this.props.contract.addresses(i)\n      const ipfsHash = await this.props.contract.ipfsHashes(address)\n      stewards.push({address: address, hash: ipfsHash})\n    }\n    this.setState({ stewards })\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        {this.state.stewards.map(steward =>\n        <div key={steward.address}>\n          <Steward ipfs={this.props.ipfs} address={steward.address} hash={steward.hash} />\n        </div>\n        )}\n      </div>\n    )\n  }\n}\n\nexport default Stewards\n","import React, {Component} from 'react'\nimport Loader from 'react-loader'\n\nclass Submission extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      submission: null,\n    }\n  }\n\n  async componentWillMount() {\n    const submission = JSON.parse(await this.props.ipfs.files.cat(this.props.match.params.hash))\n    this.setState({ submission })\n  }\n\n  render() {\n    if (!this.state.submission) return (<Loader />)\n    return (\n      <div>\n\n        <div className=\"card\">\n          <div className=\"card-header\">\n            <h6>IPFS Hash:&nbsp;\n              <a href={`https://ipfs.infura.io/ipfs/${this.props.match.params.hash}`}\n                target=\"_blank\" rel=\"noopener noreferrer\">{this.props.match.params.hash}</a>\n            </h6>\n            <h6>Patient Public ID: {this.state.submission.cgt_public_id}</h6>\n            {\"days_from_birth\" in this.state.submission && \n                <h6>Days From Birth: {this.state.submission.days_from_birth}</h6>}\n          </div>\n\n          <ul className=\"list-group list-group-flush\" style={{overflowY: 'auto'}}>\n          {this.state.submission.files.map(file =>\n            <li key={file.multihash} className=\"list-group-item\">\n              <a target=\"_blank\" rel=\"noopener noreferrer\"\n                href={this.props.ipfsURL + file.multihash}>{file.name}</a>\n              {file.name.endsWith('.vcf') &&\n              <a className=\"font-weight-bold m-r-8\" target=\"_blank\" rel=\"noopener noreferrer\"\n                href={\"http://genome.ucsc.edu/cgi-bin/hgTracks?hgt.customText=\"\n                  + encodeURIComponent(this.props.ipfsURL) + file.multihash}>&nbsp;View In Browser</a>\n              }\n              {file.name.endsWith('.dcm') &&\n              <a className=\"font-weight-bold m-r-8\" target=\"_blank\" rel=\"noopener noreferrer\"\n                href={\"https://ivmartel.github.io/dwv-jqmobile/demo/stable/index.html?input=\"\n                  + encodeURIComponent(this.props.ipfsURL) + file.multihash}>&nbsp;View</a>\n              }\n            </li>\n          )}\n          </ul>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Submission\n","import Web3 from \"web3\";\n\nconst getWeb3 = () =>\n  new Promise((resolve, reject) => {\n    // Wait for loading completion to avoid race conditions with web3 injection timing.\n    window.addEventListener(\"load\", async () => {\n      // Modern dapp browsers...\n      if (window.ethereum) {\n        console.log(\"window.ethereum detected...\");\n        const web3 = new Web3(window.ethereum);\n        try {\n          // Request account access if needed\n          await window.ethereum.enable();\n          // Acccounts now exposed\n          resolve(web3);\n        } catch (error) {\n          reject(error);\n        }\n      }\n      // Legacy dapp browsers...\n      else if (window.web3) {\n        console.log(\"window.web3 legacy detected...\");\n        const web3 = window.web3;\n        resolve(web3);\n      }\n      // Fallback to localhost; use dev console port by default...\n      else {\n        console.log(\"No injected web3 detected, using integrated web3 connected to Rinkeby test network...\");\n        const provider = new Web3.providers.HttpProvider(\"https://rinkeby.infura.io\");\n        const web3 = new Web3(provider);\n        resolve(web3);\n      }\n    });\n  });\n\nexport default getWeb3;\n","import React, {Component} from 'react'\nimport Loader from 'react-loader'\nimport { BrowserRouter, Route, Link, Switch } from 'react-router-dom'\n\nimport Markdown from './components/Markdown'\n\nimport Stewards from './components/Stewards'\nimport Submission from './components/Submission'\n\nimport StewardsContract from './contracts/Stewards.json'\nimport getWeb3 from './getWeb3'\n\nconst truffleContract = require('truffle-contract')\nconst stewardsContract = truffleContract(StewardsContract)\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n\t\t\tloaded: false,\n      web3: null,\n      contract: null,\n      ipfsURL: null,\n      ipfs: null,\n    }\n  }\n\n  async componentWillMount() {\n    try {\n      this.setState({ web3: await getWeb3() })\n      console.log(`Your account: ${this.state.web3.eth.accounts[0] }`)\n      stewardsContract.setProvider(this.state.web3.currentProvider)\n\n      this.setState({ contract: await stewardsContract.deployed() })\n      console.log(`Stewards contract address: ${this.state.contract.address }`)\n\n      this.setState({ ipfsURL: \"https://ipfs.infura.io/ipfs/\" })\n      this.setState({ ipfs: window.IpfsApi({ host: 'ipfs.infura.io', port: 5001, protocol: 'https' }) })\n\n      this.setState({ loaded: true })\n    } catch(error) {\n      console.log('Web3 Error', error)\n      alert(\"Unable to load contract, are you using Chrome and on the Rinkeby Test Network?\")\n    }\n  }\n\n  render() {\n    if (!this.state.loaded) return (<Loader />)\n\n    return (\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <div>\n          <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n            <Link className=\"nav-link\" to=\"/\">\n              <img src=\"/cgt-logo-with-name.png\" height=\"30\" alt=\"Cancer Gene Trust\"></img>\n            </Link>\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\n              data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n              <span className=\"navbar-toggler-icon\"></span>\n            </button>\n            <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n              <ul className=\"navbar-nav\">\n                <li className=\"nav-item\">\n                  <Link className=\"nav-link\" to=\"/docs/about\">About</Link>\n                </li>\n                <li className=\"nav-item\">\n                  <Link className=\"nav-link\" to=\"/docs/faq\">FAQ</Link>\n                </li>\n                <li className=\"nav-item\">\n                  <Link className=\"nav-link\" to=\"/docs/resources\">Resources</Link>\n                </li>\n              </ul>\n            </div>\n          </nav>\n          <Switch>\n            <Route exact path=\"/\" render={props => \n                <Stewards {...props} contract={this.state.contract} ipfs={this.state.ipfs} ipfsURL={this.state.ipfsURL} />}\n            />\n            <Route path=\"/submissions/:hash\" render={props => \n                <Submission {...props} ipfs={this.state.ipfs} ipfsURL={this.state.ipfsURL}/>}\n            />\n            <Route path=\"/docs/:name\" component={Markdown} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    )\n  }\n}\n\nexport default App\n","import 'bootstrap/dist/css/bootstrap.min.css'\n// eslint-disable-next-line\nimport $ from 'jquery'\n// eslint-disable-next-line\nimport 'bootstrap/dist/js/bootstrap.bundle.min'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}